class Cat:

    def eat(self):
        print("小猫爱吃鱼")

    def drink(self):
        print("小猫爱喝水")


# 创建猫对象
tom = Cat()

tom.eat()
tom.drink()


"""
在面向对象开发中，引用的概念是同样适用的！
在 Python 中使用类 创建对象之后，tom 变量中 仍然记录的是 对象在内存中的地址
也就是 tom 变量 引用 了 新建的猫对象
使用 print 输出 对象变量，默认情况下，是能够输出这个变量 引用的对象 是 由哪一个类创建的对象，以及 在内存中的地址（十六进制表示）
提示：在计算机中，通常使用 十六进制 表示 内存地址

十进制 和 十六进制 都是用来表达数字的，只是表示的方式不一样
十进制 和 十六进制 的数字之间可以来回转换
%d 可以以 10 进制 输出数字
%x 可以以 16 进制 输出数字
"""
print(tom)
addr = id(tom)
print("%d" % addr)
print("%x" % addr)
